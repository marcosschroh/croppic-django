"""
Django settings for croppic_django_implemetation project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys

BASE_DIR = os.path.abspath(os.path.dirname(__file__))

sys.path.insert(1, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(2, os.path.join(BASE_DIR, 'local_settings'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'jo4n29e0ark$-tpy4s9_hb8#e1&l%0gp6hlz4#9-5_+mjn86wu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'customers',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'croppic_django_implemetation.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'croppic_django_implemetation.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

#Local Settings Import
# try:
#     import socket
#     hostname = socket.gethostname().replace('.', '_').replace('-', '_')

#     # Hostname could start with a number, take that in consideration
#     if hostname[0].isdigit():
#         local_settings = os.getenv('FYT_LOCAL_SETTINGS')

#         if local_settings is None:
#             raise ImportError

#         if not local_settings.endswith('.py'):
#             raise Exception('local_settings file must be a python file')

#         path, py_file = os.path.split(local_settings)
#         sys.path.insert(0, path)
#         local_settings = importlib.import_module(py_file.split('.py')[0])
#     else:
#         hstr = "".join((
#             "import croppic_django_implemetation.croppic_django_implemetation.local_settings.{0} as local_settings".format(
#                 hostname
#             )
#         ))
#         print hstr
#         exec(hstr)
#         print "import local_settings.%s as local_settings" % hostname
#         HOSTNAME = hostname

# except ImportError:
#     print "No local settings file to import"
